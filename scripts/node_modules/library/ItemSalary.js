/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const Label = require('sf-core/ui/label');
const TextAlignment = require('sf-core/ui/textalignment');
const Font = require('sf-core/ui/font');

const HorizontalDivider = require("../../components/HorizontalDivider");
const ListItem1 = require("../../components/ListItem1");

const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ItemSalary = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const flexlayout115Style = getCombinedStyle(".flexLayout", {
			height: 30,
			width: null,
			flexGrow: 1,
			alignSelf: FlexLayout.AlignSelf.STRETCH,
			flexDirection: FlexLayout.FlexDirection.ROW
		});
		var flexlayout115 = new FlexLayout(flexlayout115Style);
		this.addChild(flexlayout115);
		
		const flexlayout116Style = getCombinedStyle(".flexLayout", {
			left: 0,
			top: 0,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 255, 255, 255),
			alpha: 1,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		});
		var flexlayout116 = new HorizontalDivider(flexlayout116Style, "itemSalary");
		this.addChild(flexlayout116);
		
		const dateContainerStyle = getCombinedStyle(".flexLayout", {
			height: null,
			width: 70,
			flexGrow: null,
			alignItems: FlexLayout.AlignItems.CENTER
		});
		var dateContainer = new FlexLayout(dateContainerStyle);
		flexlayout115.addChild(dateContainer);
		
		const salaryContainerStyle = getCombinedStyle(".flexLayout", {
			height: null,
			width: null,
			flexGrow: 1,
			alignItems: FlexLayout.AlignItems.CENTER
		});
		var salaryContainer = new FlexLayout(salaryContainerStyle);
		flexlayout115.addChild(salaryContainer);
		
		const flexlayout148Style = getCombinedStyle(".flexLayout", {
			left: 0,
			top: 0,
			width: null,
			height: null,
			backgroundColor: Color.create(255, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.CENTER,
			flexGrow: 1,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		});
		var flexlayout148 = new ListItem1(flexlayout148Style, "itemSalary");
		salaryContainer.addChild(flexlayout148);
		
		const label597Style = getCombinedStyle(".label .label-list-item-header", {
			height: 40,
			width: null,
			text: "FEB",
			textAlignment: TextAlignment.BOTTOMCENTER,
			marginBottom: 5,
			flexGrow: 1,
			alignSelf: FlexLayout.AlignSelf.STRETCH,
			font: Font.create("Arial", 18, Font.NORMAL)
		});
		var label597 = new Label(label597Style);
		dateContainer.addChild(label597);
		
		const flexlayout148_1Style = getCombinedStyle(".flexLayout", {
			left: 0,
			top: 0,
			width: null,
			height: null,
			backgroundColor: Color.create(255, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.CENTER,
			flexGrow: 1,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		});
		var flexlayout148_1 = new ListItem1(flexlayout148_1Style, "itemSalary");
		salaryContainer.addChild(flexlayout148_1);
		
		const label597_1Style = getCombinedStyle(".label .label-list-item-header", {
			height: 40,
			width: null,
			text: "2017",
			textAlignment: TextAlignment.TOPCENTER,
			flexGrow: 1,
			alignSelf: FlexLayout.AlignSelf.STRETCH,
			font: Font.create("Arial", 16, Font.NORMAL)
		});
		var label597_1 = new Label(label597_1Style);
		dateContainer.addChild(label597_1);
		
		//assign the children to itemSalary 
		this.children = Object.assign({}, {
			flexlayout115: flexlayout115,
			flexlayout116: flexlayout116
		});
		
		//assign the children of flexlayout115
		flexlayout115.children = Object.assign({}, {
			dateContainer: dateContainer,
			salaryContainer: salaryContainer
		});
		
		//assign the children of dateContainer
		dateContainer.children = Object.assign({}, {
			label597: label597,
			label597_1: label597_1
		});
		
		//assign the children of salaryContainer
		salaryContainer.children = Object.assign({}, {
			flexlayout148: flexlayout148,
			flexlayout148_1: flexlayout148_1
		});
		
	});

ItemSalary.defaults = getCombinedStyle(".flexLayout", {
	width: 300,
	height: 80,
	flexDirection: FlexLayout.FlexDirection.COLUMN,
	alignItems: FlexLayout.AlignItems.CENTER
});

module && (module.exports = ItemSalary);