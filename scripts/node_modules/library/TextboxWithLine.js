/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const Label = require('sf-core/ui/label');
const TextBox = require('sf-core/ui/textbox');
const Color = require('sf-core/ui/color');
const FlexLayout = require('sf-core/ui/flexlayout');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const TextboxWithLine = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const textboxInfoStyle = getCombinedStyle(".label .label-login.small .label-textboxWithLine.normal", {
			text: "Username",
			width: null,
			height: 20,
			marginLeft: 10,
			marginRight: 10
		});
		var textboxInfo = new Label(textboxInfoStyle);
		this.addChild(textboxInfo);
		this.textboxInfo = textboxInfo;

		const innerTextboxStyle = getCombinedStyle(".textBox", {
			width: null,
			height: null,
			backgroundColor: Color.create(0, 255, 255, 255),
			textColor: Color.create(255, 255, 255, 255),
			text: "Anthony Bell",
			marginLeft: 10,
			marginRight: 10,
			flexGrow: 1
		});
		var innerTextbox = new TextBox(innerTextboxStyle);
		this.addChild(innerTextbox);
		this.innerTextbox = innerTextbox;

		const textboxBottomLineStyle = getCombinedStyle(".flexLayout", {
			width: null,
			height: 1,
			marginLeft: 10,
			marginRight: 10,
			flexGrow: null
		});
		var textboxBottomLine = new FlexLayout(textboxBottomLineStyle);
		this.addChild(textboxBottomLine);
		this.textboxBottomLine = textboxBottomLine;

		//assign the children to textboxWithLine 
		this.children = Object.assign({}, {
			textboxInfo: textboxInfo,
			innerTextbox: innerTextbox,
			textboxBottomLine: textboxBottomLine
		});
		
	});

TextboxWithLine.defaults = getCombinedStyle(".flexLayout", {
	height: 60,
	width: 250,
	backgroundColor: Color.create(0, 255, 255, 255),
	paddingLeft: null,
	paddingRight: null,
	positionType: FlexLayout.PositionType.RELATIVE
});

module && (module.exports = TextboxWithLine);