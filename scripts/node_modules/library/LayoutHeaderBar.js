/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const Label = require('sf-core/ui/label');
const TextAlignment = require('sf-core/ui/textalignment');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const LayoutHeaderBar = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const flexlayout118Style = getCombinedStyle(".flexLayout", {
			backgroundColor: Color.create(0, 255, 255, 255),
			marginTop: null,
			width: null,
			height: 40,
			top: 20
		});
		var flexlayout118 = new FlexLayout(flexlayout118Style);
		this.addChild(flexlayout118);
		
		const headerBarTitleStyle = getCombinedStyle(".label", {
			backgroundColor: Color.create(0, 255, 255, 255),
			textColor: Color.create(255, 255, 255, 255),
			width: null,
			height: null,
			textAlignment: TextAlignment.MIDCENTER,
			flexGrow: 1
		});
		var headerBarTitle = new Label(headerBarTitleStyle);
		flexlayout118.addChild(headerBarTitle);
		this.headerBarTitle = headerBarTitle;

		//assign the children to layoutHeaderBar 
		this.children = Object.assign({}, {
			flexlayout118: flexlayout118
		});
		
		//assign the children of flexlayout118
		flexlayout118.children = Object.assign({}, {
			headerBarTitle: headerBarTitle
		});
		
	});

LayoutHeaderBar.defaults = getCombinedStyle(".flexLayout .flexLayout-headerBar", {
	width: 358,
	height: 144,
	positionType: FlexLayout.PositionType.RELATIVE
});

module && (module.exports = LayoutHeaderBar);