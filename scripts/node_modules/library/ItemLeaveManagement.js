/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');

const HorizontalDivider = require("../../components/HorizontalDivider");

const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ItemLeaveManagement = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		var flexlayout5 = new FlexLayout(getCombinedStyle(".flexLayout", {
			height: 30,
			width: 200,
			flexGrow: 1
		})); 
		this.addChild(flexlayout5);
		
		var flexlayout7 = new FlexLayout(getCombinedStyle(".flexLayout", {
			height: 50,
			width: 200
		})); 
		this.addChild(flexlayout7);
		
		var flexlayout6 = new HorizontalDivider(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: 312,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		}), "itemLeaveManagement");
		this.addChild(flexlayout6);
		
		//assign the children to itemLeaveManagement 
		this.children = Object.assign({}, {
			flexlayout5: flexlayout5,
			flexlayout7: flexlayout7,
			flexlayout6: flexlayout6
		});
		
	});

ItemLeaveManagement.defaults = getCombinedStyle(".flexLayout", {
	left: 9,
	top: 389,
	width: 333,
	height: 108
});

module && (module.exports = ItemLeaveManagement);