/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const Label = require('sf-core/ui/label');
const Color = require('sf-core/ui/color');
const FlexLayout = require('sf-core/ui/flexlayout');

const ListItem1 = require("../../components/ListItem1");
const HorizontalDivider = require("../../components/HorizontalDivider");

const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ItemEmploymentHistory = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const headertitleStyle = getCombinedStyle(".label .label-list-item-header", {
			width: null,
			height: 39,
			marginLeft: null,
			id: 101,
			backgroundColor: Color.create(255, 255, 255, 255),
			text: "  COMPANY NAME"
		});
		var headertitle = new Label(headertitleStyle);
		this.addChild(headertitle);
		this.headertitle = headertitle;

		const row1Style = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 102,
			backgroundColor: Color.create(255, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.CENTER
		});
		var row1 = new ListItem1(row1Style, "itemEmploymentHistory");
		this.addChild(row1);
		this.row1 = row1;

		const firstDividerStyle = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			id: 103,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		});
		var firstDivider = new HorizontalDivider(firstDividerStyle, "itemEmploymentHistory");
		this.addChild(firstDivider);
		
		const row2Style = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 104,
			backgroundColor: Color.create(255, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.CENTER
		});
		var row2 = new ListItem1(row2Style, "itemEmploymentHistory");
		this.addChild(row2);
		this.row2 = row2;

		const secondDividerStyle = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			id: 105,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		});
		var secondDivider = new HorizontalDivider(secondDividerStyle, "itemEmploymentHistory");
		this.addChild(secondDivider);
		
		const row3Style = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 106,
			backgroundColor: Color.create(255, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.CENTER
		});
		var row3 = new ListItem1(row3Style, "itemEmploymentHistory");
		this.addChild(row3);
		this.row3 = row3;

		const thirdDividerStyle = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			id: 107,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		});
		var thirdDivider = new HorizontalDivider(thirdDividerStyle, "itemEmploymentHistory");
		this.addChild(thirdDivider);
		
		const row4Style = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 108,
			backgroundColor: Color.create(255, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.CENTER
		});
		var row4 = new ListItem1(row4Style, "itemEmploymentHistory");
		this.addChild(row4);
		this.row4 = row4;

		const fourthDividerStyle = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			id: 109,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		});
		var fourthDivider = new HorizontalDivider(fourthDividerStyle, "itemEmploymentHistory");
		this.addChild(fourthDivider);
		
		const row5Style = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 110,
			backgroundColor: Color.create(255, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.CENTER
		});
		var row5 = new ListItem1(row5Style, "itemEmploymentHistory");
		this.addChild(row5);
		this.row5 = row5;

		const fifthDividerStyle = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			id: 111,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		});
		var fifthDivider = new HorizontalDivider(fifthDividerStyle, "itemEmploymentHistory");
		this.addChild(fifthDivider);
		
		const row6Style = getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 112,
			backgroundColor: Color.create(255, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.CENTER,
			alignSelf: FlexLayout.AlignSelf.AUTO
		});
		var row6 = new ListItem1(row6Style, "itemEmploymentHistory");
		this.addChild(row6);
		this.row6 = row6;

		//assign the children to itemEmploymentHistory 
		this.children = Object.assign({}, {
			headertitle: headertitle,
			row1: row1,
			firstDivider: firstDivider,
			row2: row2,
			secondDivider: secondDivider,
			row3: row3,
			thirdDivider: thirdDivider,
			row4: row4,
			fourthDivider: fourthDivider,
			row5: row5,
			fifthDivider: fifthDivider,
			row6: row6
		});
		
	});

ItemEmploymentHistory.defaults = getCombinedStyle(".flexLayout", {
	width: 364,
	height: 357,
	marginBottom: null,
	backgroundColor: Color.create(0, 255, 255, 255),
	paddingBottom: 10,
	paddingLeft: null,
	alignItems: FlexLayout.AlignItems.STRETCH,
	flexGrow: 1,
	alignSelf: FlexLayout.AlignSelf.STRETCH,
	positionType: FlexLayout.PositionType.RELATIVE
});

module && (module.exports = ItemEmploymentHistory);