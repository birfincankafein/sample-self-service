/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const Label = require('sf-core/ui/label');
const Color = require('sf-core/ui/color');
const FlexLayout = require('sf-core/ui/flexlayout');

const ListItem1 = require("../../components/ListItem1");
const HorizontalDivider = require("../../components/HorizontalDivider");

const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const ItemEmploymentHistory = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		var header = new Label(getCombinedStyle(".label .label-list-item-header", {
			width: 341,
			height: 39,
			marginLeft: 10,
			id: 101,
			backgroundColor: Color.create(0, 255, 255, 255)
		})); 
		this.addChild(header);
		
		var firstRow = new ListItem1(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 102,
			backgroundColor: Color.create(255, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.FLEX_START
		}), "itemEmploymentHistory");
		this.addChild(firstRow);
		
		var firstDivider = new HorizontalDivider(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			id: 103,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		}), "itemEmploymentHistory");
		this.addChild(firstDivider);
		
		var secondRow = new ListItem1(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 104,
			backgroundColor: Color.create(0, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.FLEX_START
		}), "itemEmploymentHistory");
		this.addChild(secondRow);
		
		var secondDivider = new HorizontalDivider(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			id: 105,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		}), "itemEmploymentHistory");
		this.addChild(secondDivider);
		
		var thirdRow = new ListItem1(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 106,
			backgroundColor: Color.create(0, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.FLEX_START
		}), "itemEmploymentHistory");
		this.addChild(thirdRow);
		
		var thirdDivider = new HorizontalDivider(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			id: 107,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		}), "itemEmploymentHistory");
		this.addChild(thirdDivider);
		
		var fourthRow = new ListItem1(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 106,
			backgroundColor: Color.create(0, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.FLEX_START
		}), "itemEmploymentHistory");
		this.addChild(fourthRow);
		
		var fourthDivider = new HorizontalDivider(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			id: 107,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		}), "itemEmploymentHistory");
		this.addChild(fourthDivider);
		
		var fifthRow = new ListItem1(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 106,
			backgroundColor: Color.create(0, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.FLEX_START
		}), "itemEmploymentHistory");
		this.addChild(fifthRow);
		
		var fifthDivider = new HorizontalDivider(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 1,
			backgroundColor: Color.create(255, 151, 151, 151),
			alpha: 0.4,
			marginLeft: 10,
			marginRight: 10,
			id: 107,
			flexGrow: null,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignSelf: FlexLayout.AlignSelf.STRETCH
		}), "itemEmploymentHistory");
		this.addChild(fifthDivider);
		
		var sixthRow = new ListItem1(getCombinedStyle(".flexLayout", {
			left: null,
			top: null,
			width: null,
			height: 50,
			id: 106,
			backgroundColor: Color.create(0, 255, 255, 255),
			flexDirection: FlexLayout.FlexDirection.ROW,
			positionType: FlexLayout.PositionType.RELATIVE,
			alignItems: FlexLayout.AlignItems.FLEX_START
		}), "itemEmploymentHistory");
		this.addChild(sixthRow);
		
		//assign the children to itemEmploymentHistory 
		this.children = Object.assign({}, {
			header: header,
			firstRow: firstRow,
			firstDivider: firstDivider,
			secondRow: secondRow,
			secondDivider: secondDivider,
			thirdRow: thirdRow,
			thirdDivider: thirdDivider,
			fourthRow: fourthRow,
			fourthDivider: fourthDivider,
			fifthRow: fifthRow,
			fifthDivider: fifthDivider,
			sixthRow: sixthRow
		});
		
	});

ItemEmploymentHistory.defaults = getCombinedStyle(".flexLayout", {
	left: 9,
	top: 87,
	width: 350,
	height: 294,
	marginBottom: null,
	backgroundColor: Color.create(255, 255, 255, 255),
	paddingBottom: null,
	paddingLeft: null,
	alignItems: FlexLayout.AlignItems.STRETCH,
	flexGrow: 1,
	alignSelf: FlexLayout.AlignSelf.STRETCH
});

module && (module.exports = ItemEmploymentHistory);